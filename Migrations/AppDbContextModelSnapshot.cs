// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using publicLibrary.Data;

#nullable disable

namespace publicLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("publicLibrary.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PublishingHouse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Released")
                        .HasColumnType("date");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("books");
                });

            modelBuilder.Entity("publicLibrary.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DocumentNumb")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentNumb")
                        .IsUnique();

                    b.ToTable("clients");
                });

            modelBuilder.Entity("publicLibrary.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<int?>("LoanDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("LoanDetails_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("LoanDetailsId");

                    b.ToTable("loans");
                });

            modelBuilder.Entity("publicLibrary.Models.LoanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Book_ID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DevolutionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("loansDetails");
                });

            modelBuilder.Entity("publicLibrary.Models.Loan", b =>
                {
                    b.HasOne("publicLibrary.Models.Client", null)
                        .WithMany("Loans")
                        .HasForeignKey("ClientId");

                    b.HasOne("publicLibrary.Models.LoanDetails", null)
                        .WithMany("Loans_d")
                        .HasForeignKey("LoanDetailsId");
                });

            modelBuilder.Entity("publicLibrary.Models.LoanDetails", b =>
                {
                    b.HasOne("publicLibrary.Models.Book", null)
                        .WithMany("LoansDetails")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("publicLibrary.Models.Book", b =>
                {
                    b.Navigation("LoansDetails");
                });

            modelBuilder.Entity("publicLibrary.Models.Client", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("publicLibrary.Models.LoanDetails", b =>
                {
                    b.Navigation("Loans_d");
                });
#pragma warning restore 612, 618
        }
    }
}
